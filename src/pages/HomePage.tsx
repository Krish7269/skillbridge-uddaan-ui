import { Link } from 'react-router-dom';
import { BookOpen, Users, MessageCircle, Award, FileText, HelpCircle, TrendingUp } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { useApp } from '@/contexts/AppContext';
import { useTranslation } from '@/lib/i18n';
import { OnboardingModal } from '@/components/onboarding/OnboardingModal';

export default function HomePage() {
  const { language, user } = useApp();
  const { t } = useTranslation(language);

  const quickActions = [
    {
      title: t('nav.courses'),
      description: language === 'en' ? 'Explore digital literacy and skills courses' : '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§æ‡§ï‡•ç‡§∑‡§∞‡§§‡§æ ‡§î‡§∞ ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã‡§∞‡•ç‡§∏ ‡§ñ‡•ã‡§ú‡•á‡§Ç',
      icon: <BookOpen className="h-6 w-6" />,
      path: '/courses',
      variant: 'default' as const,
    },
    {
      title: t('nav.mentorship'),
      description: language === 'en' ? 'Connect with mentors for guidance' : '‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ï‡•ã‡§Ç ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§Ç',
      icon: <Users className="h-6 w-6" />,
      path: '/mentorship',
      variant: 'secondary' as const,
    },
    {
      title: t('nav.community'),
      description: language === 'en' ? 'Join study circles and discussions' : '‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§Æ‡§Ç‡§°‡§≤‡§ø‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§ö‡§∞‡•ç‡§ö‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç',
      icon: <MessageCircle className="h-6 w-6" />,
      path: '/community',
      variant: 'success' as const,
    },
    {
      title: t('nav.showcase'),
      description: language === 'en' ? 'Share your work and achievements' : '‡§Ö‡§™‡§®‡§æ ‡§ï‡§æ‡§Æ ‡§î‡§∞ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡§æ‡§Ç ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç',
      icon: <Award className="h-6 w-6" />,
      path: '/showcase',
      variant: 'gradient' as const,
    },
    {
      title: t('nav.certificates'),
      description: language === 'en' ? 'View certificates and job opportunities' : '‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞ ‡§î‡§∞ ‡§®‡•å‡§ï‡§∞‡•Ä ‡§ï‡•á ‡§Ö‡§µ‡§∏‡§∞ ‡§¶‡•á‡§ñ‡•á‡§Ç',
      icon: <FileText className="h-6 w-6" />,
      path: '/certificates',
      variant: 'outline' as const,
    },
    {
      title: t('nav.support'),
      description: language === 'en' ? 'Get help and access resources' : '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡•á‡§Ç',
      icon: <HelpCircle className="h-6 w-6" />,
      path: '/support',
      variant: 'ghost' as const,
    },
  ];

  // Mock user progress
  const userProgress = user?.progress || 0;

  return (
    <>
      <OnboardingModal />
      
      <div className="container mx-auto px-4 py-8 max-w-7xl">
        {/* Welcome Section */}
        <section className="mb-12 animate-fade-in">
          <div className="bg-gradient-primary rounded-2xl p-8 md:p-12 text-white">
            <h1 className="text-3xl md:text-5xl font-bold mb-4">
              {t('home.welcome')}, {user?.name || (language === 'en' ? 'Learner' : '‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∞‡•ç‡§•‡•Ä')}! üëã
            </h1>
            <p className="text-lg md:text-xl text-white/90 mb-8 max-w-2xl">
              {language === 'en' 
                ? 'Continue your journey to digital empowerment and skill development.'
                : '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§∂‡§ï‡•ç‡§§‡§ø‡§ï‡§∞‡§£ ‡§î‡§∞ ‡§ï‡•å‡§∂‡§≤ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•Ä ‡§Ö‡§™‡§®‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§'}
            </p>

            {/* Progress Card */}
            {user && (
              <Card className="bg-white/10 backdrop-blur-sm border-white/20">
                <CardHeader>
                  <CardTitle className="text-white flex items-center gap-2">
                    <TrendingUp className="h-5 w-5" />
                    {t('home.progress')}
                  </CardTitle>
                  <CardDescription className="text-white/80">
                    {userProgress}% {language === 'en' ? 'Complete' : '‡§™‡•Ç‡§∞‡•ç‡§£'}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <Progress value={userProgress} className="h-3" />
                  <p className="text-sm text-white/70 mt-3">
                    {language === 'en'
                      ? `Keep going! You're making great progress.`
                      : '‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç! ‡§Ü‡§™ ‡§¨‡•á‡§π‡§§‡§∞‡•Ä‡§® ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§'}
                  </p>
                </CardContent>
              </Card>
            )}
          </div>
        </section>

        {/* Quick Actions Grid */}
        <section>
          <h2 className="text-2xl md:text-3xl font-bold mb-6">
            {language === 'en' ? 'Explore Features' : '‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç'}
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {quickActions.map((action, index) => (
              <Card
                key={action.path}
                className="group hover:shadow-xl hover:scale-105 transition-all duration-300 animate-fade-in"
                style={{ animationDelay: `${index * 100}ms` }}
                data-testid={`action-card-${action.path}`}
              >
                <CardHeader>
                  <div className="h-12 w-12 rounded-lg bg-primary/10 flex items-center justify-center mb-4 group-hover:bg-primary/20 transition-colors">
                    {action.icon}
                  </div>
                  <CardTitle className="text-xl">{action.title}</CardTitle>
                  <CardDescription className="text-base">
                    {action.description}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <Button
                    asChild
                    variant={action.variant}
                    className="w-full"
                  >
                    <Link to={action.path}>
                      {language === 'en' ? 'Explore' : '‡§ñ‡•ã‡§ú‡•á‡§Ç'}
                    </Link>
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* CTA Section */}
        {!user && (
          <section className="mt-16 text-center animate-fade-in">
            <Card className="bg-muted/50 border-dashed">
              <CardHeader>
                <CardTitle className="text-2xl">
                  {language === 'en' ? 'Ready to start learning?' : '‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç?'}
                </CardTitle>
                <CardDescription className="text-base">
                  {language === 'en'
                    ? 'Create an account to track your progress and earn certificates.'
                    : '‡§Ö‡§™‡§®‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞ ‡§Ö‡§∞‡•ç‡§ú‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§ñ‡§æ‡§§‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç‡•§'}
                </CardDescription>
              </CardHeader>
              <CardContent>
                <Button asChild size="lg" variant="gradient">
                  <Link to="/auth">{t('auth.signup')}</Link>
                </Button>
              </CardContent>
            </Card>
          </section>
        )}
      </div>
    </>
  );
}
